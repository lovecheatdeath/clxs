<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clxs.mapper.WorkerMapper">
  <resultMap id="BaseResultMap" type="com.clxs.pojo.Worker">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="article" jdbcType="VARCHAR" property="article" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, name, status, img, article, create_at, create_by, update_at, update_by
  </sql>
  <select id="list" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from worker
    <choose>
      <when test="id != null">
        where id =#{id,jdbcType=INTEGER}
      </when>
      <when test="parentId != null">
        where parent_id=#{parentId,jdbcType=INTEGER}
      </when> 
       <when test="name != null">
         where name LIKE CONCAT(CONCAT('%',#{name}),'%')
       </when>
       <when test="status != null">
         where status =#{status,jdbcType=BIT}
       </when>
    </choose>
  </select>
  <select id="selectByParentId" resultMap="BaseResultMap">
    select id,name,parent_id from worker where parent_id=#{parentId}
  </select>
  <select id="selectWithoutChild" resultMap="BaseResultMap">
    select id,name,parent_id,status from worker where  status=1 and id in
    <foreach collection="list" item="ids" open="(" close=")" separator=",">
    #{ids}
    </foreach>
  </select>

  <select id="selectByNameOrArticle"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from worker
    where 1=1
    <if test="id != null">
      and id=#{id,jdbcType=INTEGER}
    </if>
    <if test="parentId != null">
      and parent_id=#{parentId,jdbcType=INTEGER}
    </if>
    <if test="status != null">
      and status=#{status,jdbcType=BIT}
    </if>
    <if test="keyword != null">
      <bind name="pattern" value="'%' +keyword+ '%'"/>
      and CONCAT(name,article) like #{pattern}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from worker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.clxs.pojo.Worker">
    insert into worker (id, parent_id, name, 
      status, img, article,
      create_at, create_by, update_at, 
      update_by)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=BIT}, #{img,jdbcType=VARCHAR}, #{article,jdbcType=VARCHAR},
      #{createAt,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{updateAt,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.clxs.pojo.Worker">
    insert into worker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="article != null">
        article,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="article != null">
        #{article,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.clxs.pojo.Worker">
    update worker
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="article != null">
        article = #{article,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="downLoadsWorker">
    update worker set status = 0
    where id in
    <foreach collection="list" item="ids" open="(" close=")" separator=",">
      #{ids}
    </foreach>
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clxs.pojo.Worker">
    update worker
    set parent_id = #{parentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      img = #{img,jdbcType=VARCHAR},
      article = #{article,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>